// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  email    String  @unique
  username String
  profesi  String
  image    String?
  password String
  posts    Post[]  // Relasi ke model Post
}


model Post {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  content     String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  authorId    String   @db.ObjectId
  author      User     @relation(fields: [authorId], references: [id]) // Relasi ke model User

  categoryId  String   @db.ObjectId
  category    Category @relation("CategoryToPosts", fields: [categoryId], references: [id]) // Relasi ke model Category

  @@map("posts") // Nama koleksi di MongoDB
}



model Category {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String   @unique               // Nama kategori
  slug        String   @unique               // URL-friendly name (slug)
  posts Post[] @relation("CategoryToPosts")
  createdAt   DateTime @default(now())       // Waktu pembuatan
  updatedAt   DateTime @updatedAt            // Waktu terakhir diperbarui

  @@map("categories")                        // Nama koleksi di MongoDB
}

